{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Suyash Sinha\\\\Desktop\\\\AppAssignment\\\\assignment-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport AddPost from './Components/AddPost';\nimport Post from './Components/Post';\nimport AddComment from './Components/AddComment';\nimport { useState } from 'react';\n\nfunction App() {\n  _s();\n\n  const dummyposts = [{\n    \"id\": 1,\n    \"self\": true,\n    \"User\": \"User 1\",\n    \"text\": \"Hey Everyone\",\n    \"day\": \"5th Feb,2020\",\n    \"likes\": 5,\n    \"comments\": [{\n      \"cuser\": \"User2\",\n      \"comment\": \" Hey!!!!\"\n    }, {\n      \"cuser\": \"User2\",\n      \"comment\": \"How are You\"\n    }]\n  }];\n  const [posts, setPosts] = useState(dummyposts); //Add Post\n\n  const addPost = text => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const User = \"User 1\";\n    const d = new Date();\n    const day = d.toDateString();\n    const self = true;\n    const comments = [];\n    const likes = 0;\n    const newPost = {\n      id,\n      self,\n      User,\n      text,\n      day,\n      likes,\n      comments\n    };\n    console.log(newPost);\n    let newPosts = [...posts, newPost];\n    console.log(newPosts);\n    setPosts(newPosts);\n  }; //Add Comment\n\n\n  const addComment = (comment, id) => {\n    const cuser = \"User 1\";\n    const newcomment = {\n      cuser,\n      comment\n    };\n    setPosts(posts.map(post => {\n      if (post.id === id) {\n        post.comments = [...post.comments, newcomment];\n      }\n\n      return post;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AddComment, {\n      id: 1,\n      onAddComment: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddPost, {\n      onAdd: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), posts.map((singlepost, index) => /*#__PURE__*/_jsxDEV(Post, {\n      post: singlepost,\n      index: index,\n      onAddComment: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qDT25fLijhwO3qSCP9hudgp07Qw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Suyash Sinha/Desktop/AppAssignment/assignment-app/src/App.js"],"names":["AddPost","Post","AddComment","useState","App","dummyposts","posts","setPosts","addPost","text","id","Math","floor","random","User","d","Date","day","toDateString","self","comments","likes","newPost","console","log","newPosts","addComment","comment","cuser","newcomment","map","post","singlepost","index"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,UAAU,GAAI,CAElB;AACE,UAAM,CADR;AAEE,YAAS,IAFX;AAGE,YAAO,QAHT;AAIE,YAAQ,cAJV;AAKE,WAAM,cALR;AAME,aAAQ,CANV;AAOE,gBAAW,CACP;AACA,eAAQ,OADR;AAEA,iBAAU;AAFV,KADO,EAIP;AAAC,eAAQ,OAAT;AACA,iBAAU;AADV,KAJO;AAPb,GAFkB,CAApB;AAgBI,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAoBJ,QAAQ,CAACE,UAAD,CAAlC,CAjBS,CAoBf;;AACA,QAAMG,OAAO,GAAIC,IAAD,IAAS;AACvB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAkC,CAA7C;AACA,UAAMC,IAAI,GAAE,QAAZ;AACA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAMC,GAAG,GAAGF,CAAC,CAACG,YAAF,EAAZ;AACA,UAAMC,IAAI,GAAE,IAAZ;AACA,UAAMC,QAAQ,GAAE,EAAhB;AACA,UAAMC,KAAK,GAAE,CAAb;AACA,UAAMC,OAAO,GAAE;AAACZ,MAAAA,EAAD;AAAIS,MAAAA,IAAJ;AAASL,MAAAA,IAAT;AAAcL,MAAAA,IAAd;AAAmBQ,MAAAA,GAAnB;AAAuBI,MAAAA,KAAvB;AAA6BD,MAAAA;AAA7B,KAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIG,QAAQ,GAAG,CAAC,GAAGnB,KAAJ,EAAUgB,OAAV,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACAlB,IAAAA,QAAQ,CAACkB,QAAD,CAAR;AACD,GAbD,CArBe,CAmCf;;;AACA,QAAMC,UAAU,GAAG,CAACC,OAAD,EAASjB,EAAT,KAAe;AAChC,UAAMkB,KAAK,GAAE,QAAb;AACA,UAAMC,UAAU,GAAE;AAACD,MAAAA,KAAD;AAAOD,MAAAA;AAAP,KAAlB;AACApB,IAAAA,QAAQ,CAACD,KAAK,CAACwB,GAAN,CAAWC,IAAD,IAAQ;AACzB,UAAGA,IAAI,CAACrB,EAAL,KAAYA,EAAf,EAAkB;AAChBqB,QAAAA,IAAI,CAACX,QAAL,GAAgB,CAAC,GAAGW,IAAI,CAACX,QAAT,EAAkBS,UAAlB,CAAhB;AACD;;AACD,aAAOE,IAAP;AACD,KALQ,CAAD,CAAR;AAMD,GATD;;AAUE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,YAAY,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA,YADD,eAEA,QAAC,OAAD;AAAS,MAAA,KAAK,EAAElB;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFA,EAGEF,KAAK,CAACwB,GAAN,CAAU,CAACE,UAAD,EAAaC,KAAb,kBACQ,QAAC,IAAD;AACA,MAAA,IAAI,EAAED,UADN;AAEA,MAAA,KAAK,EAAEC,KAFP;AAGA,MAAA,YAAY,EAAEP;AAHd;AAAA;AAAA;AAAA;AAAA,YADlB,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA3DQtB,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import AddPost from './Components/AddPost'\nimport Post from './Components/Post'\nimport AddComment from './Components/AddComment'\nimport {useState} from 'react'\nfunction App() {\n  const dummyposts =  [\n     \n    {\n      \"id\" :1,\n      \"self\" : true,\n      \"User\":\"User 1\",\n      \"text\": \"Hey Everyone\",\n      \"day\":\"5th Feb,2020\",\n      \"likes\":5,\n      \"comments\":[\n          {\n          \"cuser\":\"User2\",\n          \"comment\":\" Hey!!!!\"},\n          {\"cuser\":\"User2\",\n          \"comment\":\"How are You\"} ]\n      }]\n      const [posts,setPosts] =  useState(dummyposts)\n\n\n//Add Post\nconst addPost = (text) =>{\n  const id = Math.floor(Math.random() * 10000)+1;\n  const User =\"User 1\";\n  const d = new Date();\n  const day = d.toDateString();\n  const self =true;\n  const comments =[];\n  const likes =0;\n  const newPost ={id,self,User,text,day,likes,comments};\n  console.log(newPost);\n  let newPosts = [...posts,newPost] \n  console.log(newPosts);\n  setPosts(newPosts)\n}\n//Add Comment\nconst addComment = (comment,id) =>{\n  const cuser =\"User 1\";\n  const newcomment ={cuser,comment};\n  setPosts(posts.map((post)=>{\n    if(post.id === id){\n      post.comments = [...post.comments,newcomment];\n    }\n    return post;\n  }));\n}\n  return (\n    <div className=\"container\">\n     <AddComment id={1} onAddComment={addComment}/>\n    <AddPost onAdd={addPost}/>\n     {posts.map((singlepost, index) => (\n                        <Post\n                        post={singlepost}\n                        index={index}\n                        onAddComment={addComment}\n                        />\n                    ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}